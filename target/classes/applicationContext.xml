<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:myns="http://www.mycompany.com/schema/myns"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.2.xsd">

    <!--引入DataSource和sqlSessionFactory  -->
    <import resource="classpath:dataSource.xml"/>
    <import resource="classpath:sqlSessionFactory.xml"/>
   
   
   <!--采用注解的方式，只需开启注解，定义扫描路径  -->
   <context:annotation-config/>
   
   <!--开启扫描  -->
  <context:component-scan base-package="com.ssm.test">
  	<!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />  -->
  </context:component-scan>
  
  <!--mybatis 的dao没有实现类，实现方法都在mapping里，只要动态扫描dao接口，注入springIOC容器 -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"  />
       <!--  给出需要扫描Dao接口包 -->
        <property name="basePackage" value="com.ssm.test.dao"  />
   </bean>
   
   <!-- data OR mapping interface -->  
<!-- <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">  
    <property name="sqlSessionFactory" ref="sqlSessionFactory" />  
    <property name="mapperInterface" value="com.ssm.test.dao.UserDao" />  
</bean>   -->
    
  <!--配置事务管理器  -->
  <!--事务管理  -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
  </bean>

<!--开启事务注解  -->
<!-- <tx:annotation-driven transaction-manager="txManager" />   -->


  <!--配置事务传播特性  -->
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
      <tx:attributes>
         <tx:method name="insert*"  propagation="REQUIRED"  />
         <tx:method name="delete*"  propagation="REQUIRED"  />
         <tx:method name="update*"  propagation="REQUIRED"  />
         <tx:method name="select*"  read-only="true"   />
      </tx:attributes>
  </tx:advice>

<!--配置切面Aop来定义事务应用域  -->	
 <aop:config>
       <!--配置切入点  -->
       <aop:advisor advice-ref="txAdvice"  pointcut="execution(* com.ssm.test.service.impl.UserServiceImpl.*(..))"/>  
 </aop:config>

<!-- 设置freeMarker的配置文件路径 -->
	<bean id="freemarkerConfiguration"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="/WEB-INF/classes/freemarker.properties" />
	</bean>

        <bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="freemarkerSettings" ref="freemarkerConfiguration" /> 
		<property name="templateLoaderPath">
		    <value>/WEB-INF/freemarkerTemplate/</value>
		</property>
		<!-- <property name="freemarkerVariables">设置一些常用的全局变量
		    <map>
			<entry key="xml_escape" value-ref="fmXmlEscape" />
			<entry key="webRoot" value="/shop"></entry>  
                        <entry key="jsRoot" value="/shop/js"></entry>   
		    </map>
		</property> -->
	</bean>
 
  <!-- 配置freeMarker视图解析器 -->
	<bean id="freemarkerViewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" 
			/>
		<!-- <property name="viewNames" value="/freemaker/*.ftl,/freemaker/*.html" /> -->
		<property name="contentType" value="text/html; charset=utf-8" />
		<property name="cache" value="true" />
		<property name="suffix" value=".html" />
	<!-- 	<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" /> -->
		<property  name="requestContextAttribute"  value="request" />
		<property name="order" value="1" />
	</bean>
</beans>